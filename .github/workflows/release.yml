name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-artifacts:
    name: Build Artifacts (Backend + Frontend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'

      - name: Build backend (linux-amd64)
        working-directory: backend
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
        run: |
          mkdir -p ../build
          go mod download
          go build -o ../build/file-share-server ./cmd/server

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Build frontend
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi
          npm run build --if-present
          cd ..
          mkdir -p build
          tar -czf build/frontend-dist.tar.gz -C frontend dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            build/file-share-server
            build/frontend-dist.tar.gz

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-artifacts
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: build

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/file-share-server
            build/frontend-dist.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
